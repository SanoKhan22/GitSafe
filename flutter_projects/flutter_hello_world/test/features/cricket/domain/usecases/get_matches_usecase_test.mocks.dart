// Mocks generated by Mockito 5.4.4 from annotations
// in flutter_hello_world/test/features/cricket/domain/usecases/get_matches_usecase_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:flutter_hello_world/core/error/failure.dart' as _i5;
import 'package:flutter_hello_world/features/cricket/domain/entities/match_entity.dart'
    as _i6;
import 'package:flutter_hello_world/features/cricket/domain/entities/match_enums.dart'
    as _i7;
import 'package:flutter_hello_world/features/cricket/domain/entities/player_entity.dart'
    as _i9;
import 'package:flutter_hello_world/features/cricket/domain/entities/score_entity.dart'
    as _i10;
import 'package:flutter_hello_world/features/cricket/domain/entities/team_entity.dart'
    as _i8;
import 'package:flutter_hello_world/features/cricket/domain/repositories/cricket_repository.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [CricketRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockCricketRepository extends _i1.Mock implements _i3.CricketRepository {
  MockCricketRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.MatchEntity>>> getMatches({
    _i7.MatchStatus? status,
    String? userId,
    int? limit = 20,
    int? offset = 0,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMatches,
          [],
          {
            #status: status,
            #userId: userId,
            #limit: limit,
            #offset: offset,
          },
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, List<_i6.MatchEntity>>>.value(
                _FakeEither_0<_i5.Failure, List<_i6.MatchEntity>>(
          this,
          Invocation.method(
            #getMatches,
            [],
            {
              #status: status,
              #userId: userId,
              #limit: limit,
              #offset: offset,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i6.MatchEntity>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.MatchEntity>> getMatchById(
          String? matchId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMatchById,
          [matchId],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.MatchEntity>>.value(
            _FakeEither_0<_i5.Failure, _i6.MatchEntity>(
          this,
          Invocation.method(
            #getMatchById,
            [matchId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.MatchEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.MatchEntity>> createMatch(
          _i6.MatchEntity? match) =>
      (super.noSuchMethod(
        Invocation.method(
          #createMatch,
          [match],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.MatchEntity>>.value(
            _FakeEither_0<_i5.Failure, _i6.MatchEntity>(
          this,
          Invocation.method(
            #createMatch,
            [match],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.MatchEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.MatchEntity>> updateMatch(
          _i6.MatchEntity? match) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateMatch,
          [match],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.MatchEntity>>.value(
            _FakeEither_0<_i5.Failure, _i6.MatchEntity>(
          this,
          Invocation.method(
            #updateMatch,
            [match],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.MatchEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> deleteMatch(String? matchId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteMatch,
          [matchId],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #deleteMatch,
            [matchId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.MatchEntity>> startMatch(
          String? matchId) =>
      (super.noSuchMethod(
        Invocation.method(
          #startMatch,
          [matchId],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.MatchEntity>>.value(
            _FakeEither_0<_i5.Failure, _i6.MatchEntity>(
          this,
          Invocation.method(
            #startMatch,
            [matchId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.MatchEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.MatchEntity>> endMatch(
    String? matchId,
    dynamic result,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #endMatch,
          [
            matchId,
            result,
          ],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.MatchEntity>>.value(
            _FakeEither_0<_i5.Failure, _i6.MatchEntity>(
          this,
          Invocation.method(
            #endMatch,
            [
              matchId,
              result,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.MatchEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.MatchEntity>>> getLiveMatches() =>
      (super.noSuchMethod(
        Invocation.method(
          #getLiveMatches,
          [],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, List<_i6.MatchEntity>>>.value(
                _FakeEither_0<_i5.Failure, List<_i6.MatchEntity>>(
          this,
          Invocation.method(
            #getLiveMatches,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i6.MatchEntity>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.MatchEntity>>>
      getUpcomingMatches() => (super.noSuchMethod(
            Invocation.method(
              #getUpcomingMatches,
              [],
            ),
            returnValue: _i4
                .Future<_i2.Either<_i5.Failure, List<_i6.MatchEntity>>>.value(
                _FakeEither_0<_i5.Failure, List<_i6.MatchEntity>>(
              this,
              Invocation.method(
                #getUpcomingMatches,
                [],
              ),
            )),
          ) as _i4.Future<_i2.Either<_i5.Failure, List<_i6.MatchEntity>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.MatchEntity>>>
      getCompletedMatches() => (super.noSuchMethod(
            Invocation.method(
              #getCompletedMatches,
              [],
            ),
            returnValue: _i4
                .Future<_i2.Either<_i5.Failure, List<_i6.MatchEntity>>>.value(
                _FakeEither_0<_i5.Failure, List<_i6.MatchEntity>>(
              this,
              Invocation.method(
                #getCompletedMatches,
                [],
              ),
            )),
          ) as _i4.Future<_i2.Either<_i5.Failure, List<_i6.MatchEntity>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i8.TeamEntity>>> getTeams({
    String? userId,
    _i8.TeamType? type,
    int? limit = 20,
    int? offset = 0,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTeams,
          [],
          {
            #userId: userId,
            #type: type,
            #limit: limit,
            #offset: offset,
          },
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, List<_i8.TeamEntity>>>.value(
                _FakeEither_0<_i5.Failure, List<_i8.TeamEntity>>(
          this,
          Invocation.method(
            #getTeams,
            [],
            {
              #userId: userId,
              #type: type,
              #limit: limit,
              #offset: offset,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i8.TeamEntity>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i8.TeamEntity>> getTeamById(
          String? teamId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTeamById,
          [teamId],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i8.TeamEntity>>.value(
            _FakeEither_0<_i5.Failure, _i8.TeamEntity>(
          this,
          Invocation.method(
            #getTeamById,
            [teamId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i8.TeamEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i8.TeamEntity>> createTeam(
          _i8.TeamEntity? team) =>
      (super.noSuchMethod(
        Invocation.method(
          #createTeam,
          [team],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i8.TeamEntity>>.value(
            _FakeEither_0<_i5.Failure, _i8.TeamEntity>(
          this,
          Invocation.method(
            #createTeam,
            [team],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i8.TeamEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i8.TeamEntity>> updateTeam(
          _i8.TeamEntity? team) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateTeam,
          [team],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i8.TeamEntity>>.value(
            _FakeEither_0<_i5.Failure, _i8.TeamEntity>(
          this,
          Invocation.method(
            #updateTeam,
            [team],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i8.TeamEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> deleteTeam(String? teamId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteTeam,
          [teamId],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #deleteTeam,
            [teamId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i8.TeamEntity>> addPlayerToTeam(
    String? teamId,
    String? playerId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addPlayerToTeam,
          [
            teamId,
            playerId,
          ],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i8.TeamEntity>>.value(
            _FakeEither_0<_i5.Failure, _i8.TeamEntity>(
          this,
          Invocation.method(
            #addPlayerToTeam,
            [
              teamId,
              playerId,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i8.TeamEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i8.TeamEntity>> removePlayerFromTeam(
    String? teamId,
    String? playerId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #removePlayerFromTeam,
          [
            teamId,
            playerId,
          ],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i8.TeamEntity>>.value(
            _FakeEither_0<_i5.Failure, _i8.TeamEntity>(
          this,
          Invocation.method(
            #removePlayerFromTeam,
            [
              teamId,
              playerId,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i8.TeamEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i8.TeamEntity>> updateTeamCaptain(
    String? teamId,
    String? captainId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateTeamCaptain,
          [
            teamId,
            captainId,
          ],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i8.TeamEntity>>.value(
            _FakeEither_0<_i5.Failure, _i8.TeamEntity>(
          this,
          Invocation.method(
            #updateTeamCaptain,
            [
              teamId,
              captainId,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i8.TeamEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i8.TeamEntity>>> searchTeams(
          String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchTeams,
          [query],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, List<_i8.TeamEntity>>>.value(
                _FakeEither_0<_i5.Failure, List<_i8.TeamEntity>>(
          this,
          Invocation.method(
            #searchTeams,
            [query],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i8.TeamEntity>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i9.PlayerEntity>>> getPlayers({
    String? teamId,
    _i9.PlayerRole? role,
    int? limit = 20,
    int? offset = 0,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPlayers,
          [],
          {
            #teamId: teamId,
            #role: role,
            #limit: limit,
            #offset: offset,
          },
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, List<_i9.PlayerEntity>>>.value(
                _FakeEither_0<_i5.Failure, List<_i9.PlayerEntity>>(
          this,
          Invocation.method(
            #getPlayers,
            [],
            {
              #teamId: teamId,
              #role: role,
              #limit: limit,
              #offset: offset,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i9.PlayerEntity>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i9.PlayerEntity>> getPlayerById(
          String? playerId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPlayerById,
          [playerId],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i9.PlayerEntity>>.value(
                _FakeEither_0<_i5.Failure, _i9.PlayerEntity>(
          this,
          Invocation.method(
            #getPlayerById,
            [playerId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i9.PlayerEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i9.PlayerEntity>> createPlayer(
          _i9.PlayerEntity? player) =>
      (super.noSuchMethod(
        Invocation.method(
          #createPlayer,
          [player],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i9.PlayerEntity>>.value(
                _FakeEither_0<_i5.Failure, _i9.PlayerEntity>(
          this,
          Invocation.method(
            #createPlayer,
            [player],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i9.PlayerEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i9.PlayerEntity>> updatePlayer(
          _i9.PlayerEntity? player) =>
      (super.noSuchMethod(
        Invocation.method(
          #updatePlayer,
          [player],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i9.PlayerEntity>>.value(
                _FakeEither_0<_i5.Failure, _i9.PlayerEntity>(
          this,
          Invocation.method(
            #updatePlayer,
            [player],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i9.PlayerEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> deletePlayer(String? playerId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deletePlayer,
          [playerId],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #deletePlayer,
            [playerId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i9.PlayerEntity>> updatePlayerStats(
    String? playerId,
    _i9.PlayerStats? stats,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updatePlayerStats,
          [
            playerId,
            stats,
          ],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i9.PlayerEntity>>.value(
                _FakeEither_0<_i5.Failure, _i9.PlayerEntity>(
          this,
          Invocation.method(
            #updatePlayerStats,
            [
              playerId,
              stats,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i9.PlayerEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i9.PlayerEntity>>> searchPlayers(
          String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchPlayers,
          [query],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, List<_i9.PlayerEntity>>>.value(
                _FakeEither_0<_i5.Failure, List<_i9.PlayerEntity>>(
          this,
          Invocation.method(
            #searchPlayers,
            [query],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i9.PlayerEntity>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i9.PlayerEntity>>>
      getAvailablePlayers() => (super.noSuchMethod(
            Invocation.method(
              #getAvailablePlayers,
              [],
            ),
            returnValue: _i4
                .Future<_i2.Either<_i5.Failure, List<_i9.PlayerEntity>>>.value(
                _FakeEither_0<_i5.Failure, List<_i9.PlayerEntity>>(
              this,
              Invocation.method(
                #getAvailablePlayers,
                [],
              ),
            )),
          ) as _i4.Future<_i2.Either<_i5.Failure, List<_i9.PlayerEntity>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i10.ScoreEntity>> getMatchScore(
          String? matchId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMatchScore,
          [matchId],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i10.ScoreEntity>>.value(
                _FakeEither_0<_i5.Failure, _i10.ScoreEntity>(
          this,
          Invocation.method(
            #getMatchScore,
            [matchId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i10.ScoreEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i10.ScoreEntity>> updateScore(
          _i10.ScoreEntity? score) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateScore,
          [score],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i10.ScoreEntity>>.value(
                _FakeEither_0<_i5.Failure, _i10.ScoreEntity>(
          this,
          Invocation.method(
            #updateScore,
            [score],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i10.ScoreEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i10.ScoreEntity>> addBall(
    String? matchId,
    _i10.BallEntity? ball,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addBall,
          [
            matchId,
            ball,
          ],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i10.ScoreEntity>>.value(
                _FakeEither_0<_i5.Failure, _i10.ScoreEntity>(
          this,
          Invocation.method(
            #addBall,
            [
              matchId,
              ball,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i10.ScoreEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i10.ScoreEntity>> addWicket(
    String? matchId,
    _i10.WicketEntity? wicket,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addWicket,
          [
            matchId,
            wicket,
          ],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i10.ScoreEntity>>.value(
                _FakeEither_0<_i5.Failure, _i10.ScoreEntity>(
          this,
          Invocation.method(
            #addWicket,
            [
              matchId,
              wicket,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i10.ScoreEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i10.ScoreEntity>> completeOver(
    String? matchId,
    _i10.OverEntity? over,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #completeOver,
          [
            matchId,
            over,
          ],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i10.ScoreEntity>>.value(
                _FakeEither_0<_i5.Failure, _i10.ScoreEntity>(
          this,
          Invocation.method(
            #completeOver,
            [
              matchId,
              over,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i10.ScoreEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i10.InningEntity>> getInning(
    String? matchId,
    int? inningNumber,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getInning,
          [
            matchId,
            inningNumber,
          ],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i10.InningEntity>>.value(
                _FakeEither_0<_i5.Failure, _i10.InningEntity>(
          this,
          Invocation.method(
            #getInning,
            [
              matchId,
              inningNumber,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i10.InningEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i10.InningEntity>> completeInning(
    String? matchId,
    int? inningNumber,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #completeInning,
          [
            matchId,
            inningNumber,
          ],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i10.InningEntity>>.value(
                _FakeEither_0<_i5.Failure, _i10.InningEntity>(
          this,
          Invocation.method(
            #completeInning,
            [
              matchId,
              inningNumber,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i10.InningEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i9.PlayerStats>> getPlayerStats(
          String? playerId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPlayerStats,
          [playerId],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i9.PlayerStats>>.value(
            _FakeEither_0<_i5.Failure, _i9.PlayerStats>(
          this,
          Invocation.method(
            #getPlayerStats,
            [playerId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i9.PlayerStats>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i8.TeamStats>> getTeamStats(
          String? teamId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTeamStats,
          [teamId],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i8.TeamStats>>.value(
            _FakeEither_0<_i5.Failure, _i8.TeamStats>(
          this,
          Invocation.method(
            #getTeamStats,
            [teamId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i8.TeamStats>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i9.PlayerEntity>>> getTopBatsmen(
          {int? limit = 10}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTopBatsmen,
          [],
          {#limit: limit},
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, List<_i9.PlayerEntity>>>.value(
                _FakeEither_0<_i5.Failure, List<_i9.PlayerEntity>>(
          this,
          Invocation.method(
            #getTopBatsmen,
            [],
            {#limit: limit},
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i9.PlayerEntity>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i9.PlayerEntity>>> getTopBowlers(
          {int? limit = 10}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTopBowlers,
          [],
          {#limit: limit},
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, List<_i9.PlayerEntity>>>.value(
                _FakeEither_0<_i5.Failure, List<_i9.PlayerEntity>>(
          this,
          Invocation.method(
            #getTopBowlers,
            [],
            {#limit: limit},
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i9.PlayerEntity>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i8.TeamEntity>>> getTopTeams(
          {int? limit = 10}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTopTeams,
          [],
          {#limit: limit},
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, List<_i8.TeamEntity>>>.value(
                _FakeEither_0<_i5.Failure, List<_i8.TeamEntity>>(
          this,
          Invocation.method(
            #getTopTeams,
            [],
            {#limit: limit},
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i8.TeamEntity>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, Map<String, dynamic>>> getMatchStatistics(
          String? matchId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMatchStatistics,
          [matchId],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, Map<String, dynamic>>>.value(
                _FakeEither_0<_i5.Failure, Map<String, dynamic>>(
          this,
          Invocation.method(
            #getMatchStatistics,
            [matchId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, Map<String, dynamic>>>);

  @override
  _i4.Stream<_i6.MatchEntity> watchMatch(String? matchId) =>
      (super.noSuchMethod(
        Invocation.method(
          #watchMatch,
          [matchId],
        ),
        returnValue: _i4.Stream<_i6.MatchEntity>.empty(),
      ) as _i4.Stream<_i6.MatchEntity>);

  @override
  _i4.Stream<_i10.ScoreEntity> watchScore(String? matchId) =>
      (super.noSuchMethod(
        Invocation.method(
          #watchScore,
          [matchId],
        ),
        returnValue: _i4.Stream<_i10.ScoreEntity>.empty(),
      ) as _i4.Stream<_i10.ScoreEntity>);

  @override
  _i4.Stream<List<_i6.MatchEntity>> watchLiveMatches() => (super.noSuchMethod(
        Invocation.method(
          #watchLiveMatches,
          [],
        ),
        returnValue: _i4.Stream<List<_i6.MatchEntity>>.empty(),
      ) as _i4.Stream<List<_i6.MatchEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> syncOfflineData() =>
      (super.noSuchMethod(
        Invocation.method(
          #syncOfflineData,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #syncOfflineData,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.MatchEntity>>>
      getOfflineMatches() => (super.noSuchMethod(
            Invocation.method(
              #getOfflineMatches,
              [],
            ),
            returnValue: _i4
                .Future<_i2.Either<_i5.Failure, List<_i6.MatchEntity>>>.value(
                _FakeEither_0<_i5.Failure, List<_i6.MatchEntity>>(
              this,
              Invocation.method(
                #getOfflineMatches,
                [],
              ),
            )),
          ) as _i4.Future<_i2.Either<_i5.Failure, List<_i6.MatchEntity>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> saveMatchOffline(
          _i6.MatchEntity? match) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveMatchOffline,
          [match],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #saveMatchOffline,
            [match],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);
}
